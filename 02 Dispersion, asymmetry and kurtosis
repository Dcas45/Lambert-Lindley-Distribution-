# -----------------------
# Packages used---------- 
# -----------------------

library(lamW) # For computing the Lambert W function
library(plot3D) # For computing 3D graphs

# ------------------------------
# mk function for 2D figures--- 
# ------------------------------

 mk <- function(k,theta,alpha){
   n=length(theta)
   f=rep(0,n)
   for(i in 1:n){
     f[i]=integrate(function(u,k,theta,alpha){lambertWm1((theta+1)*(-1+u)*exp(-1-theta))^k*alpha^u*(1-log(alpha)*(1-u))},
       lower=0,upper=1,k=k,theta=theta[i],alpha=alpha)$value
   }
   return(f)
 }

# ------------------------------------------------------------------
# Coefficient of variation, skewness and kurtosis for 2D figures ---
# ------------------------------------------------------------------
 
cv <- function(t,a){
   m1 = -(t+1+mk(1,t,a))/t
   m2 = (t^2+2*t+1+2*mk(1,t,a)*t+2*mk(1,t,a)+mk(2,t,a))/t^2
     sqrt(m2-m1^2)/m1
}
 
skew <- function(t,a){
   m1 = -(t+1+mk(1,t,a))/t
   m2 = (t^2+2*t+1+2*mk(1,t,a)*t+2*mk(1,t,a)+mk(2,t,a))/t^2
   m3 = -(t^3+3*t^2+3*t+1+3*mk(1,t,a)*t^2+6*mk(1,t,a)*t+3*mk(1,t,a)+3*mk(2,t,a)*t+3*mk(2,t,a)+mk(3,t,a))/t^3
     (m3-3*m1*m2+2*m1^3)/(m2-m1^2)^{3/2}
}
 
kurt <- function(t,a){
   m1 = -(t+1+mk(1,t,a))/t
   m2 = (t^2+2*t+1+2*mk(1,t,a)*t+2*mk(1,t,a)+mk(2,t,a))/t^2
   m3 = -(t^3+3*t^2+3*t+1+3*mk(1,t,a)*t^2+6*mk(1,t,a)*t+3*mk(1,t,a)+3*mk(2,t,a)*t+3*mk(2,t,a)+mk(3,t,a))/t^3
   m4 = (t^4+4*t^3+6*t^2+4*t+1+4*mk(1,t,a)*t^3+12*mk(1,t,a)*t^2+12*mk(1,t,a)*t+4*mk(1,t,a)+6*mk(2,t,a)*t^2+12*mk(2,t,a)*t+6*mk(2,t,a)+4*mk(3,t,a)*t+4*mk(3,t,a)+mk(4,t,a))/t^4
   (m4-4*m1*m3+6*m1^2*m2-3*m1^4)/(m2-m1^2)^{2}
}
 
# ----------------
# 2D Graphics-----
# ----------------
 
alpha <- 1
curve(cv(x,alpha),0,20,ylim=c(0.4,2),lwd=2,ylab="Coeficiente de variaciÃ³n",xlab=expression(theta),cex.lab=1.3)
alpha <- 0.1
curve(cv(x,alpha),add=TRUE,lty=2,lwd=2,col="red")
alpha <- 0.5
curve(cv(x,alpha),add=TRUE,lty=3,lwd=2,col="blue")
alpha <- 1.5
curve(cv(x,alpha),add=TRUE,lty=4,lwd=2,col="green")
alpha <- 2.7
curve(cv(x,alpha),add=TRUE,lty=5,lwd=2,col="orange")
legend("topleft",c("1","0.1","0.5","1.5","2.7"),lty=1:5,title=expression(alpha),lwd=2,col=c("black","red","blue","green","orange"))
 
alpha <- 0.1
curve(skew(x,alpha),0.001,5,ylim=c(0.7,4.5),lty=3,lwd=2,col="red",ylab="Skewness",xlab=expression(theta),cex.lab=1.3)
alpha <- 0.5
curve(skew(x,alpha),add=TRUE,lty=2,lwd=2,col="blue")
alpha <- 1
curve(skew(x,alpha),add=TRUE,lty=1,lwd=2)
alpha <- 1.5
curve(skew(x,alpha),add=TRUE,lty=4,lwd=2,col="green")
alpha <- 2.7
curve(skew(x,alpha),add=TRUE,lty=5,lwd=2,col="orange")
legend("topleft",c("0.1","0.5","1","1.5","2.7"),lty=c(3,2,1,4,5),title=expression(alpha),lwd=2,col=c("red","blue","black","green","orange"))
 
alpha <- 0.6
curve(kurt(x,alpha),0.001,20,ylim=c(4,15.2),lty=3,lwd=2,col="red",ylab="Curtosis",xlab=expression(theta),cex.lab=1.3)
alpha <- 0.8
curve(kurt(x,alpha),add=TRUE,lty=2,lwd=2,col="blue")
alpha <- 1
curve(kurt(x,alpha),add=TRUE,lty=1,lwd=2)
alpha <- 1.5
curve(kurt(x,alpha),add=TRUE,lty=4,lwd=2,col="green")
alpha <- 2.7
curve(kurt(x,alpha),add=TRUE,lty=5,lwd=2,col="orange")
legend("topleft",c("0.5","0.8","1","1.5","2.7"),lty=c(3,2,1,4,5),title=expression(alpha),lwd=2,col=c("red","blue","black","green","orange"))

# -------------------------------
# mk1 function for 3D figures --- 
# -------------------------------

mk1 <- function(k,theta,alpha){
   n=length(theta)
   f=rep(0,n)
   for(i in 1:n){
     f[i]=integrate(function(u,k,theta,alpha){lambertWm1((theta+1)*(-1+u)*exp(-1-theta))^k*alpha^u*(1-log(alpha)*(1-u))},
       lower=0,upper=1,k=k,theta=theta[i],alpha=alpha[i])$value
   }
   return(f)
 }

# ------------------------------------------------------------------
# Coefficient of variation, skewness and kurtosis for 3D figures----
# ------------------------------------------------------------------
 
cv <- function(t,a){
   m1 = -(t+1+mk1(1,t,a))/t
   m2 = (t^2+2*t+1+2*mk1(1,t,a)*t+2*mk1(1,t,a)+mk1(2,t,a))/t^2
     sqrt(m2-m1^2)/m1
}

skew <- function(t,a){
   m1 = -(t+1+mk1(1,t,a))/t
   m2 = (t^2+2*t+1+2*mk1(1,t,a)*t+2*mk1(1,t,a)+mk1(2,t,a))/t^2
   m3 = -(t^3+3*t^2+3*t+1+3*mk1(1,t,a)*t^2+6*mk1(1,t,a)*t+3*mk1(1,t,a)+3*mk1(2,t,a)*t+3*mk1(2,t,a)+mk1(3,t,a))/t^3
     (m3-3*m1*m2+2*m1^3)/(m2-m1^2)^{3/2}
}

kurt <- function(t,a){
   m1 = -(t+1+mk1(1,t,a))/t
   m2 = (t^2+2*t+1+2*mk1(1,t,a)*t+2*mk1(1,t,a)+mk1(2,t,a))/t^2
   m3 = -(t^3+3*t^2+3*t+1+3*mk1(1,t,a)*t^2+6*mk1(1,t,a)*t+3*mk1(1,t,a)+3*mk1(2,t,a)*t+3*mk1(2,t,a)+mk1(3,t,a))/t^3
   m4 = (t^4+4*t^3+6*t^2+4*t+1+4*mk1(1,t,a)*t^3+12*mk1(1,t,a)*t^2+12*mk1(1,t,a)*t+4*mk1(1,t,a)+6*mk1(2,t,a)*t^2+12*mk1(2,t,a)*t+6*mk(2,t,a)+4*mk(3,t,a)*t+4*mk(3,t,a)+mk(4,t,a))/t^4
   (m4-4*m1*m3+6*m1^2*m2-3*m1^4)/(m2-m1^2)^{2}
}

# ---------------
# 3D Graphics ---
# ---------------

t<- seq(0.01,20,length=20)
a <- seq(0.01,exp(1),length=20)
z1 <- outer(t,a,function(t,a){cv(t,a)})
persp3D(t,a,z1,xlab="THETA",ylab="ALFA",zlab="COEFICIENTE DE VARIACION",bty="f",expand=1,d=110,theta=140,phi=10,ticktype="detailed",facets = FALSE, colkey=FALSE)

t <- seq(0.01,5,length=20)
a <- seq(0.01,exp(1),length=20)
z2 <- outer(t,a,function(t,a){skew(t,a)})
persp3D(t,a,z2,xlab="THETA",ylab="ALFA",zlab="ASIMETRIA",bty="f",expand=1,d=110,theta=140,phi=10,ticktype="detailed",facets = FALSE, colkey=FALSE)
 
t <- seq(0.1,20,length=20)
a <- seq(0.1,exp(1),length=20)
z3 <- outer(t,a,function(t,a){kurt(t,a)})
persp3D(t,a,z3,xlab="THETA",ylab="ALFA",zlab="CURTOSIS",bty="f",expand=1,d=110,theta=140,phi=10,ticktype="detailed",facets = FALSE, colkey=FALSE)
