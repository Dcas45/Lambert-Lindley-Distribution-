#The following files must be run beforehand:
# 01. Structural functions
# 03. Estimator for LL distribution
# 04. Some conventional distributions


# ------------------------------
# Stress breakup time Data -----
# ------------------------------

 x <- c(
 0.0251,0.0886,0.0891,0.2501,0.3113,0.3451,0.4763,0.5650,0.5671,0.6566,0.6748,0.6751,
 0.6753,0.7696,0.8375,0.8391,0.8425,0.8645,0.8851,0.9113,0.9120,0.9836,1.0483,1.0596,
 1.0773,1.1733,1.2570,1.2766,1.2985,1.3211,1.3503,1.3551,1.4595,1.4880,1.5728,1.5733,
 1.7083,1.7263,1.7460,1.7630,1.7746,1.8275,1.8375,1.8503,1.8808,1.8878,1.8881,1.9316,
 1.9558,2.0048,2.0408,2.0903,2.1093,2.1330,2.2100,2.2460,2.2878,2.3203,2.3470,2.3513,
 2.4951,2.5260,2.9911,3.0256,3.2678,3.4045,3.4846,3.7433,3.7455,3.9143,4.8073,5.4005,
 5.4435,5.5295,6.5541,9.0960)


# -----------
# LL fit ---
# -----------

 fit <- optim(par=c(0.1,0.5),fn=loglik,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par # 1.061576 1.958040
 fit$value #  121.8453
 AIC=-2*(- 121.8453)+2*2
 AIC# 247.6906
 BIC=-2*(- 121.8453)+2*log(n)
 BIC# 252.3521
 hessiana <- fit$hessian
 vcov_matrix <- solve(hessiana)
 error_estandar <- sqrt(diag(vcov_matrix))
 error_estandar

# ---------------------------------
# PL GL TL MOL L W and G fits -----
# ---------------------------------

 fit <- optim(par=c(0.1,0.05),fn=loglik,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par #0.7047341 1.1423977
 fit$value  # 122.4001
 AIC=-2*(-122.4001)+2*2
 AIC#  248.8002
 BIC=-2*(-122.4001)+2*log(76)
 BIC#  253.4617
 hessiana <- fit$hessian
 vcov_matrix <- solve(hessiana)
 error_estandar <- sqrt(diag(vcov_matrix))
 error_estandar


 fit <- optim(par=c(0.5,0.01),fn=loglik,method=c("BFGS"),hessian=TRUE,x=x)
 fit$par  #0.9362637 1.3902774
 fit$value  # 121.8991
 AIC=-2*(-121.8991)+2*2
 AIC#  247.7982
 BIC=-2*(-121.8991)+2*log(76)
 BIC# 252.4597
 hessiana <- fit$hessian
 vcov_matrix <- solve(hessiana)
 error_estandar <- sqrt(diag(vcov_matrix))
 error_estandar


 fit <- optim(par=c(0.4933331,0.9773532),fn=loglik,method=c("L-BFGS-B"),hessian=TRUE,lower=c(-1,1e-12),upper=c(1,exp(1)),x=x)
 fit$par #0.4933331 0.9773532
 fit$value # 123.1193
 AIC=-2*(- 123.1193)+2*2
 AIC#  250.2386
 BIC=-2*(-123.1193)+2*log(76)
 BIC# 254.9001
 hessiana <- fit$hessian
 vcov_matrix <- solve(hessiana)
 error_estandar <- sqrt(diag(vcov_matrix))
 error_estandar


 fit <- optim(par=c(0.5,0.5),fn=loglik,method=c("L-BFGS-B"),lower=c(1e-12,1e-12),upper=c(Inf,Inf),hessian=TRUE,x=x)
 fit$par #1.036629 1.974727
 fit$value # 122.6285
 AIC=-2*(- 122.6285)+2*2
 AIC#  249.257
 BIC=-2*(-  122.6285)+2*log(76)
 BIC#  253.9185
 hessiana <- fit$hessian
 vcov_matrix <- solve(hessiana)
 error_estandar <- sqrt(diag(vcov_matrix))
 error_estandar


 fit <- optim(par=c(0.01),fn=loglik,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par # 0.7947831
 fit$value # 123.6751
 AIC=-2*(- 123.6751)+2*1
 AIC# 249.3502
 BIC=-2*(- 123.6751)+1*log(n)
 BIC# 251.6809
 hessiana <- fit$hessian
 fisher <- hessiana
 var_t <- solve(fisher)  # varianza del estimador
 error_estandar <- sqrt(diag(var_t))  # error estÃ¡ndar
 error_estandar


 fit <- optim(par=c(0.1,0.5),fn=loglik,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par #1.325612 2.132817
 fit$value # 122.5247
 AIC=-2*(-122.5247)+2*2
 AIC#  249.0494
 BIC=-2*(-122.5247)+2*log(76)
 BIC# 250.5946
 hessiana <- fit$hessian
 vcov_matrix <- solve(hessiana)
 error_estandar <- sqrt(diag(vcov_matrix))
 error_estandar


 fit <- optim(par=c(0.1,0.5),fn=loglik,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par # 1.641041 1.193908
 fit$value #  122.2494
 AIC=-2*(- 122.2494)+2*2
 AIC#  248.4988
 BIC=-2*(- 122.2494)+2*log(76)
 BIC#  250.044
 hessiana <- fit$hessian
 vcov_matrix <- solve(hessiana)
 error_estandar <- sqrt(diag(vcov_matrix))
 error_estandar


# ----------------------------------
# Histogram and fitted densities ---
# ----------------------------------









































