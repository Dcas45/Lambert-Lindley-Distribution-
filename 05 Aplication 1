#The following files must be run beforehand:
# 01. Structural functions
# 03. Estimator for LL distribution
# 04. Some conventional distributions

# ------------------------------
# Stress breakup time Data -----
# ------------------------------

 x <- c(
 0.0251,0.0886,0.0891,0.2501,0.3113,0.3451,0.4763,0.5650,0.5671,0.6566,0.6748,0.6751,
 0.6753,0.7696,0.8375,0.8391,0.8425,0.8645,0.8851,0.9113,0.9120,0.9836,1.0483,1.0596,
 1.0773,1.1733,1.2570,1.2766,1.2985,1.3211,1.3503,1.3551,1.4595,1.4880,1.5728,1.5733,
 1.7083,1.7263,1.7460,1.7630,1.7746,1.8275,1.8375,1.8503,1.8808,1.8878,1.8881,1.9316,
 1.9558,2.0048,2.0408,2.0903,2.1093,2.1330,2.2100,2.2460,2.2878,2.3203,2.3470,2.3513,
 2.4951,2.5260,2.9911,3.0256,3.2678,3.4045,3.4846,3.7433,3.7455,3.9143,4.8073,5.4005,
 5.4435,5.5295,6.5541,9.0960)

# -----------
# LL fit ---
# -----------

 fit <- optim(par=c(0.1,0.5),fn=loglikLL,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par 
 fit$value 
 sqrt(diag(solve(fit$hessian)))

 AIC=-2*(- 121.8453)+2*2
 AIC

 BIC=-2*(- 121.8453)+2*log(n)
 BIC

# ------------------------------------
# PL, GL, TL, MOL, W, and G fits -----
# ------------------------------------

 fit <- optim(par=c(0.1,0.05),fn=loglikPL,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par 
 fit$value 
 sqrt(diag(solve(fit$hessian)))

 AIC=-2*(-122.4001)+2*2
 AIC

 BIC=-2*(-122.4001)+2*log(76)
 BIC

 fit <- optim(par=c(0.5,0.01),fn=loglikGL,method=c("BFGS"),hessian=TRUE,x=x)
 fit$par 
 fit$value  
 sqrt(diag(solve(fit$hessian)))

 AIC=-2*(-121.8991)+2*2
 AIC

 BIC=-2*(-121.8991)+2*log(76)
 BIC

 fit <- optim(par=c(0.4933331,0.9773532),fn=loglikTL,method=c("L-BFGS-B"),hessian=TRUE,lower=c(-1,1e-12),upper=c(1,exp(1)),x=x)
 fit$par 
 fit$value 
 sqrt(diag(solve(fit$hessian)))

 AIC=-2*(- 123.1193)+2*2
 AIC

 BIC=-2*(-123.1193)+2*log(76)
 BIC

 fit <- optim(par=c(0.5,0.5),fn=loglikMOL,method=c("L-BFGS-B"),lower=c(1e-12,1e-12),upper=c(Inf,Inf),hessian=TRUE,x=x)
 fit$par 
 fit$value 
 sqrt(diag(solve(fit$hessian)))

 AIC=-2*(- 122.6285)+2*2
 AIC

 BIC=-2*(-  122.6285)+2*log(76)
 BIC#  
 
 fit <- optim(par=c(0.1,0.5),fn=loglikW,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par 
 fit$value
 sqrt(diag(solve(fit$hessian)))

 AIC=-2*(-122.5247)+2*2
 AIC

 BIC=-2*(-122.5247)+2*log(76)
 BIC
 
 fit <- optim(par=c(0.1,0.5),fn=loglikG,method=c("L-BFGS-B"),hessian=TRUE,x=x)
 fit$par 
 fit$value 
 sqrt(diag(solve(fit$hessian)))

 AIC=-2*(- 122.2494)+2*2
 AIC

 BIC=-2*(- 122.2494)+2*log(76)
 BIC

# ----------------------------------
# Histogram and fitted densities ---
# ----------------------------------

 hist(x,freq=F,nclass=12,ylim=c(0,0.4),main="",cex.lab=1.3,xlab="Tiempos ruptura", ylab="Función  de densidad",col="white")
 box()
 t <- 1.061576  
 a <- 1.958040
 curve(dLL(x,t,a),add=TRUE,col="black",lwd=2) 
 t <- 0.7047341 
 a <- 1.1423977
 curve(dPL(x,t,a),add=TRUE,col="red",lw=2,lty=2)
 t <- 0.9362637  
 a <- 1.3902774 
 curve(dGL(x,t,a),add=TRUE,col="blue",lw=2,lty=3)
 t <- 0.4933331 
 a <- 0.9773532      
 curve(dTL(x,t,a),add=TRUE,col="yellow",lw=2,lty=4)
 t <- 1.036629   
 a <- 1.974727 
 curve(dMOL(x,t,a),add=TRUE,col="green",lw=2,lty=5)
 t <- 1.325612
 a <- 2.132817
 curve(dweibull(x,shape=t,scale=a),add=TRUE,col="skyblue",lw=2,lty=8)
 t <- 1.641079 
 a <- 0.837610
 curve(dgamma(x,t,a),add=TRUE,col="purple",lw=2,lty=9)
 t <- 1.061576  
 a <- 1.958040
 curve(dLL(x,t,a),add=TRUE,col="black",lwd=2) 
 legend("topright", legend = c("LL","PL","GL","TL","MOL","W","G"), col = c("black","Red","blue","yellow","green","sky blue","purple"), lwd = 2, lty=c(1:6,8,9))


# ---------------------------------------------------------------
# Goodness of fit tests of Anderson–Darling y Cramér–von Mises---
# ---------------------------------------------------------------

 library(goftest) 

 t <- 1.061576 
 a <- 1.958040
 ad.test(x, "pLL", t = t, a= a, estimated = FALSE) 
 cvm.test(x, "pLL", t = t, a= a, estimated = FALSE)

 t <- 0.7047341 
 a <- 1.1423977
 ad.test(x, "pPL", t = t, a= a, estimated = FALSE) 
 cvm.test(x, "pPL", t = t, a= a, estimated = FALSE)

 t <- 0.9362637 
 a <- 1.3902774
 ad.test(x, "pGL", t = t, a= a, estimated = FALSE) 
 cvm.test(x, "pGL", t = t, a= a, estimated = FALSE)

 t <- 0.4933331 
 a <- 0.9773532 
 ad.test(x, "pTL", t = t, a= a, estimated = FALSE) 
 cvm.test(x, "pTL", t = t, a= a, estimated = FALSE)

 t <- 1.036629 
 a <- 1.974727
 ad.test(x, "pMOL", t = t, a= a, estimated = FALSE) 
 cvm.test(x, "pMOL", t = t, a= a, estimated = FALSE)

 t <- 1.325612
 a <- 2.132817
 ad.test(x, "pweibull", scale = a, shape = t, estimated = FALSE) 
 cvm.test(x, "pweibull", scale = a, shape = t, estimated = FALSE)

 t <- 1.641041 
 a <- 1.193908
 ad.test(x, "pgamma", scale = t, shape = a, estimated = FALSE) 
 cvm.test(x, "pgamma", scale = t, shape = a, estimated = FALSE)
